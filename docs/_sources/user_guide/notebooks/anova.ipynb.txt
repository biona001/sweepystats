{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "31b8b634-9953-49ce-b8c8-2e199a6ec64b",
   "metadata": {},
   "source": [
    "# ANOVA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2d6652af-6c45-4885-83ed-7044850c1697",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sweepystats as sw\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import patsy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d9c79fc-74d2-4f28-9c73-9252d98b8394",
   "metadata": {},
   "source": [
    "To illustrate, here is a simple example data set:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "5d91bfb9-8116-4758-81c9-b52553499ba1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Outcome</th>\n",
       "      <th>Group</th>\n",
       "      <th>Factor</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.6</td>\n",
       "      <td>A</td>\n",
       "      <td>X</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.5</td>\n",
       "      <td>A</td>\n",
       "      <td>X</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.2</td>\n",
       "      <td>B</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.7</td>\n",
       "      <td>B</td>\n",
       "      <td>X</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.1</td>\n",
       "      <td>A</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5.2</td>\n",
       "      <td>C</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3.0</td>\n",
       "      <td>B</td>\n",
       "      <td>X</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4.8</td>\n",
       "      <td>C</td>\n",
       "      <td>Y</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4.0</td>\n",
       "      <td>C</td>\n",
       "      <td>X</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Outcome Group Factor\n",
       "0      3.6     A      X\n",
       "1      3.5     A      X\n",
       "2      4.2     B      Y\n",
       "3      2.7     B      X\n",
       "4      4.1     A      Y\n",
       "5      5.2     C      Y\n",
       "6      3.0     B      X\n",
       "7      4.8     C      Y\n",
       "8      4.0     C      X"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame({\n",
    "    'Outcome': [3.6, 3.5, 4.2, 2.7, 4.1, 5.2, 3.0, 4.8, 4.0],\n",
    "    'Group': pd.Categorical([\"A\", \"A\", \"B\", \"B\", \"A\", \"C\", \"B\", \"C\", \"C\"]), \n",
    "    'Factor': pd.Categorical([\"X\", \"X\", \"Y\", \"X\", \"Y\", \"Y\", \"X\", \"Y\", \"X\"])\n",
    "})\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08fd5b1f-0b48-46d9-a9b3-938c9bdf027f",
   "metadata": {},
   "source": [
    "## One way ANOVA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8fda7b6-5ff2-489f-84f7-6dc29514888b",
   "metadata": {},
   "source": [
    "Suppose we want to know: do samples in different `Group` have different `Outcome`s? Statistically, we want to test whether the mean of each group is different, i.e. the null hypothesis is $\\mu_A = \\mu_B = \\mu_C$ . For this, we can conduct a 1-way ANOVA. `Sweepystats` accepts patsy's [formula](https://patsy.readthedocs.io/en/latest/formulas.html) to specify which variable is being considered."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "bf26ecb7-2e66-4679-80fd-69f32471669a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|███████████████████████████████████████████| 3/3 [00:00<00:00, 2520.62it/s]\n"
     ]
    }
   ],
   "source": [
    "formula = \"Outcome ~ Group\"\n",
    "one_way = sw.ANOVA(df, formula)\n",
    "one_way.fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "796578b2-7361-4ad5-94fd-229d91f3afec",
   "metadata": {},
   "source": [
    "The F-statistic can be extracted as:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1ca3007b-48a1-4312-bc79-5e60a408467a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "np.float64(3.966867469879485)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "one_way.f_statistic()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c05feb8e-6e9e-4a9e-a4cb-13f000cdeaca",
   "metadata": {},
   "source": [
    "The p-value is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9d0531ed-e555-4f37-b4ab-b674eee57568",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "np.float64(0.07984562357182773)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "one_way.p_value()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d3f2bc3-4ffe-4766-8d91-11ad11f8e6a3",
   "metadata": {},
   "source": [
    "If we reject the null at $\\alpha = 0.05$ level, then no, there is no statistically significant difference between at least one pair of group means."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "823c3749-e063-4fdd-8600-c1c8477a1c6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>df</th>\n",
       "      <th>sum_sq</th>\n",
       "      <th>mean_sq</th>\n",
       "      <th>F</th>\n",
       "      <th>PR(&gt;F)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Group</th>\n",
       "      <td>2.0</td>\n",
       "      <td>2.926667</td>\n",
       "      <td>1.463333</td>\n",
       "      <td>3.966867</td>\n",
       "      <td>0.079846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residual</th>\n",
       "      <td>6.0</td>\n",
       "      <td>2.213333</td>\n",
       "      <td>0.368889</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           df    sum_sq   mean_sq         F    PR(>F)\n",
       "Group     2.0  2.926667  1.463333  3.966867  0.079846\n",
       "Residual  6.0  2.213333  0.368889       NaN       NaN"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.formula.api import ols\n",
    "\n",
    "# Example data\n",
    "data = pd.DataFrame({\n",
    "    'Outcome': [3.6, 3.5, 4.2, 2.7, 4.1, 5.2, 3.0, 4.8, 4.0],\n",
    "    'Group': pd.Categorical([\"A\", \"A\", \"B\", \"B\", \"A\", \"C\", \"B\", \"C\", \"C\"]), \n",
    "    'Factor': pd.Categorical([\"X\", \"X\", \"Y\", \"X\", \"Y\", \"Y\", \"X\", \"Y\", \"X\"])\n",
    "})\n",
    "\n",
    "# Fit the model\n",
    "model = ols('Outcome ~ Group', data=data).fit()\n",
    "\n",
    "# Perform ANOVA\n",
    "anova_table = sm.stats.anova_lm(model, typ=1)  # Type I ANOVA\n",
    "anova_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "81aa0e98-299f-4788-b0e8-117d264a93a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "np.float64(2.2133333333333334)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anova_table[\"sum_sq\"].Residual"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e443e64b-b81b-470f-b801-117de45fe1bb",
   "metadata": {},
   "source": [
    "## $k$-way ANOVA\n",
    "\n",
    "Now suppose we want to know: does either `Group` or `Factor` have an effect on `Outcome`? We can conduct a 2-way ANOVA as follows:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "918b29bd-9ec1-406d-927c-4828bd002e19",
   "metadata": {},
   "source": [
    "TODO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8f718417-80b1-41e7-a67d-cd2b6c5dc60a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "6435be87-5536-476c-9518-f5d88f58c518",
   "metadata": {},
   "source": [
    "## ANVOCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ae1478ca-119c-4449-9826-c33e94ab73d9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c13a624a-8a8e-48ff-9017-75b5b72cfa16",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "f5bda865-1fbd-42ed-ab0a-108c8b1fb989",
   "metadata": {},
   "source": [
    "## MANOVA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cbb21522-dcdc-4f2f-8163-6d3ed3fceaec",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e9a1ca0-c695-4a6b-9726-5da9a963f152",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
